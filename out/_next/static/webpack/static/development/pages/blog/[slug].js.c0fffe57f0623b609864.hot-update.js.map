{"version":3,"file":"static/webpack/static\\development\\pages\\blog\\[slug].js.c0fffe57f0623b609864.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/readOnlyError.js","webpack:///./pages/blog/[slug].js"],"sourcesContent":["export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}","import React from 'react'\r\nimport matter from 'gray-matter'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport Layout from '../../components/Layout'\r\n\r\n\r\nfunction BlogTemplate(props) {\r\n\r\n    function reformatDate(fullDate) {\r\n        const date = new Date(fullDate)\r\n        return date.toDateString().slice(4);\r\n    }\r\n\r\n    // data from getInitialProps\r\n    const markdownBody = props.content\r\n    // const frontmatter = props.data\r\n    if (!props.data) {\r\n        title = ''\r\n        author = ''\r\n        date = ''\r\n    }\r\n\r\n    const { title, author, date } = props.data;\r\n\r\n\r\n\r\n    return (\r\n        <Layout siteTitle={props.siteTitle}>\r\n            <div className=\"container\">\r\n                <div className=\"block post\">\r\n                    <h1>{title}</h1>\r\n                    <h4>{author} | {reformatDate(date)}</h4>\r\n                    <div>\r\n                        <ReactMarkdown source={markdownBody} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nBlogTemplate.getInitialProps = async (ctx) => {\r\n    const { slug } = ctx.query\r\n\r\n    if (slug) {\r\n        const content = await import(`../../posts/${slug}.md`)\r\n        const data = matter(content.default);\r\n        return { ...data }\r\n    }\r\n    return {}\r\n}\r\n\r\nexport default BlogTemplate"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAoBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAIA;AACA;AALA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;;;;A","sourceRoot":""}