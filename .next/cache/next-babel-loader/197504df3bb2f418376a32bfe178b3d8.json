{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\brock\\\\Desktop\\\\nextjs-site\\\\pages\\\\posts\\\\[slug].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport matter from 'gray-matter';\nimport ReactMarkdown from 'react-markdown';\nimport Layout from '../../components/Layout';\nexport default function BlogTemplate(props) {\n  function reformatDate(fullDate) {\n    const date = new Date(fullDate);\n    return date.toDateString().slice(4);\n  } // data from getInitialProps\n\n\n  const {\n    content,\n    data: {\n      title,\n      author,\n      date\n    }\n  } = props;\n  return __jsx(Layout, {\n    siteTitle: props.siteTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"block post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, title), __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, author, \" | \", reformatDate(date)), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(ReactMarkdown, {\n    source: content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })))));\n}\n\nBlogTemplate.getInitialProps = async ctx => {\n  const {\n    query: {\n      slug\n    }\n  } = ctx;\n  console.log({\n    slug\n  });\n\n  if (slug) {\n    const content = await import(`../../posts/${slug}.md`);\n    const data = matter(content.default);\n    return _objectSpread({}, data);\n  }\n\n  return {};\n};","map":{"version":3,"sources":["C:/Users/brock/Desktop/nextjs-site/pages/posts/[slug].js"],"names":["React","matter","ReactMarkdown","Layout","BlogTemplate","props","reformatDate","fullDate","date","Date","toDateString","slice","content","data","title","author","siteTitle","getInitialProps","ctx","query","slug","console","log","default"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAGA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAExC,WAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC5B,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,QAAT,CAAb;AACA,WAAOC,IAAI,CAACE,YAAL,GAAoBC,KAApB,CAA0B,CAA1B,CAAP;AACH,GALuC,CAOxC;;;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA,MAAT;AAAiBP,MAAAA;AAAjB;AAAjB,MAA6CH,KAAnD;AAEA,SACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEA,KAAK,CAACW,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,MAAL,SAAgBT,YAAY,CAACE,IAAD,CAA5B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEI,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,CADJ,CADJ,CADJ;AAaH;;AAGDR,YAAY,CAACa,eAAb,GAA+B,MAAOC,GAAP,IAAe;AAC1C,QAAM;AACFC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AADL,MAEFF,GAFJ;AAIAG,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,IAAAA;AAAF,GAAZ;;AAEA,MAAIA,IAAJ,EAAU;AACN,UAAMR,OAAO,GAAG,MAAM,OAAQ,eAAcQ,IAAK,KAA3B,CAAtB;AACA,UAAMP,IAAI,GAAGZ,MAAM,CAACW,OAAO,CAACW,OAAT,CAAnB;AACA,6BAAYV,IAAZ;AACH;;AACD,SAAO,EAAP;AACH,CAbD","sourcesContent":["import React from 'react'\r\nimport matter from 'gray-matter'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport Layout from '../../components/Layout'\r\n\r\n\r\nexport default function BlogTemplate(props) {\r\n\r\n    function reformatDate(fullDate) {\r\n        const date = new Date(fullDate)\r\n        return date.toDateString().slice(4);\r\n    }\r\n\r\n    // data from getInitialProps\r\n    const { content, data: { title, author, date } } = props\r\n\r\n    return (\r\n        <Layout siteTitle={props.siteTitle}>\r\n            <div className=\"container\">\r\n                <div className=\"block post\">\r\n                    <h1>{title}</h1>\r\n                    <h4>{author} | {reformatDate(date)}</h4>\r\n                    <div>\r\n                        <ReactMarkdown source={content} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nBlogTemplate.getInitialProps = async (ctx) => {\r\n    const {\r\n        query: { slug }\r\n    } = ctx\r\n\r\n    console.log({ slug })\r\n\r\n    if (slug) {\r\n        const content = await import(`../../posts/${slug}.md`)\r\n        const data = matter(content.default);\r\n        return { ...data }\r\n    }\r\n    return {}\r\n}"]},"metadata":{},"sourceType":"module"}