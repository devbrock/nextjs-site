{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brock\\\\Desktop\\\\nextjs-site\\\\pages\\\\blogs.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Layout from '../components/Layout';\nexport default function blogs() {\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"blue \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Most Recent Blogs\")), __jsx(\"div\", {\n    className: \"container\",\n    style: {\n      marginTop: '2em',\n      justifyContent: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(BlogList, {\n    allBlogs: props.allBlogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  })))));\n} // src/pages/index.js\n\nblogs.getInitialProps = async function () {\n  // get all .md files from the src/posts dir\n  const posts = (context => {\n    // grab all the files matching this context\n    const keys = context.keys(); // grab the values from these files\n\n    const values = keys.map(context); // go through each file\n\n    const data = keys.map((key, index) => {\n      // Create slug from filename\n      const slug = key.replace(/^.*[\\\\\\/]/, '').split('.').slice(0, -1).join('.'); // get the current file value\n\n      const value = values[index]; // Parse frontmatter & markdownbody for the current file\n\n      const document = matter(value.default); // return the .md content & pretty slug\n\n      return {\n        document,\n        slug\n      };\n    }); // return all the posts\n\n    return data;\n  })(require.context('../posts', true, /\\.md$/));\n\n  return {\n    allBlogs: posts\n  };\n};","map":{"version":3,"sources":["C:/Users/brock/Desktop/nextjs-site/pages/blogs.js"],"names":["React","Layout","blogs","marginTop","justifyContent","props","allBlogs","getInitialProps","posts","context","keys","values","map","data","key","index","slug","replace","split","slice","join","value","document","matter","default","require"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC5B,SACI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,KAAb;AAAoBC,MAAAA,cAAc,EAAE;AAApC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEC,KAAK,CAACC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ,CADJ,CADJ;AAcH,C,CAGD;;AACAJ,KAAK,CAACK,eAAN,GAAwB,kBAAkB;AACtC;AACA,QAAMC,KAAK,GAAG,CAACC,OAAO,IAAI;AACtB;AACA,UAAMC,IAAI,GAAGD,OAAO,CAACC,IAAR,EAAb,CAFsB,CAGtB;;AACA,UAAMC,MAAM,GAAGD,IAAI,CAACE,GAAL,CAASH,OAAT,CAAf,CAJsB,CAKtB;;AACA,UAAMI,IAAI,GAAGH,IAAI,CAACE,GAAL,CAAS,CAACE,GAAD,EAAMC,KAAN,KAAgB;AAClC;AACA,YAAMC,IAAI,GAAGF,GAAG,CACXG,OADQ,CACA,WADA,EACa,EADb,EAERC,KAFQ,CAEF,GAFE,EAGRC,KAHQ,CAGF,CAHE,EAGC,CAAC,CAHF,EAIRC,IAJQ,CAIH,GAJG,CAAb,CAFkC,CAOlC;;AACA,YAAMC,KAAK,GAAGV,MAAM,CAACI,KAAD,CAApB,CARkC,CASlC;;AACA,YAAMO,QAAQ,GAAGC,MAAM,CAACF,KAAK,CAACG,OAAP,CAAvB,CAVkC,CAWlC;;AACA,aAAO;AACHF,QAAAA,QADG;AAEHN,QAAAA;AAFG,OAAP;AAIH,KAhBY,CAAb,CANsB,CAuBtB;;AACA,WAAOH,IAAP;AACH,GAzBa,EAyBXY,OAAO,CAAChB,OAAR,CAAgB,UAAhB,EAA4B,IAA5B,EAAkC,OAAlC,CAzBW,CAAd;;AA2BA,SAAO;AACHH,IAAAA,QAAQ,EAAEE;AADP,GAAP;AAGH,CAhCD","sourcesContent":["import React from 'react'\r\nimport Layout from '../components/Layout'\r\n\r\nexport default function blogs() {\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <div className='block'>\r\n                    <div className='container' >\r\n                        <h1 className=\"blue \">Most Recent Blogs</h1>\r\n                    </div>\r\n                    <div className='container' style={{ marginTop: '2em', justifyContent: 'flex-start' }}>\r\n                        <BlogList allBlogs={props.allBlogs} />\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n// src/pages/index.js\r\nblogs.getInitialProps = async function () {\r\n    // get all .md files from the src/posts dir\r\n    const posts = (context => {\r\n        // grab all the files matching this context\r\n        const keys = context.keys()\r\n        // grab the values from these files\r\n        const values = keys.map(context)\r\n        // go through each file\r\n        const data = keys.map((key, index) => {\r\n            // Create slug from filename\r\n            const slug = key\r\n                .replace(/^.*[\\\\\\/]/, '')\r\n                .split('.')\r\n                .slice(0, -1)\r\n                .join('.')\r\n            // get the current file value\r\n            const value = values[index]\r\n            // Parse frontmatter & markdownbody for the current file\r\n            const document = matter(value.default)\r\n            // return the .md content & pretty slug\r\n            return {\r\n                document,\r\n                slug,\r\n            }\r\n        })\r\n        // return all the posts\r\n        return data\r\n    })(require.context('../posts', true, /\\.md$/))\r\n\r\n    return {\r\n        allBlogs: posts,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}