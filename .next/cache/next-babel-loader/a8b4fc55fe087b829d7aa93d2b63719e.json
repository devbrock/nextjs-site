{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\brock\\\\Desktop\\\\nextjs-site\\\\pages\\\\blog\\\\[slug].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport matter from 'gray-matter';\nimport ReactMarkdown from 'react-markdown';\nimport Layout from '../../components/Layout';\n\nfunction BlogTemplate(props) {\n  function reformatDate(fullDate) {\n    const date = new Date(fullDate);\n    return date.toDateString().slice(4);\n  } // data from getInitialProps\n\n\n  const markdownBody = props.content; // const frontmatter = props.data\n\n  const {\n    title,\n    author,\n    date\n  } = props.data;\n\n  if (!title) {\n    title = '';\n  }\n\n  if (!author) {\n    author = '';\n  }\n\n  if (!date) {\n    date = '';\n  }\n\n  return __jsx(Layout, {\n    siteTitle: props.siteTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"block post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, title), __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, author, \" | \", reformatDate(date)), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(ReactMarkdown, {\n    source: markdownBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })))));\n}\n\nBlogTemplate.getInitialProps = async ctx => {\n  const {\n    slug\n  } = ctx.query;\n\n  if (slug) {\n    const content = await import(`../../posts/${slug}.md`);\n    const data = matter(content.default);\n    return _objectSpread({}, data);\n  }\n\n  return {};\n};\n\nexport default BlogTemplate;","map":{"version":3,"sources":["C:/Users/brock/Desktop/nextjs-site/pages/blog/[slug].js"],"names":["React","matter","ReactMarkdown","Layout","BlogTemplate","props","reformatDate","fullDate","date","Date","toDateString","slice","markdownBody","content","title","author","data","siteTitle","getInitialProps","ctx","slug","query","default"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAEzB,WAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC5B,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,QAAT,CAAb;AACA,WAAOC,IAAI,CAACE,YAAL,GAAoBC,KAApB,CAA0B,CAA1B,CAAP;AACH,GALwB,CAOzB;;;AACA,QAAMC,YAAY,GAAGP,KAAK,CAACQ,OAA3B,CARyB,CASzB;;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBP,IAAAA;AAAjB,MAA0BH,KAAK,CAACW,IAAtC;;AAEA,MAAI,CAACF,KAAL,EAAY;AAAEA,IAAAA,KAAK,GAAG,EAAR;AAAY;;AAC1B,MAAI,CAACC,MAAL,EAAa;AAAEA,IAAAA,MAAM,GAAG,EAAT;AAAa;;AAC5B,MAAI,CAACP,IAAL,EAAW;AAAEA,IAAAA,IAAI,GAAG,EAAP;AAAW;;AAExB,SACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEH,KAAK,CAACY,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,MAAL,SAAgBT,YAAY,CAACE,IAAD,CAA5B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEI,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,CADJ,CADJ,CADJ;AAaH;;AAEDR,YAAY,CAACc,eAAb,GAA+B,MAAOC,GAAP,IAAe;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACE,KAArB;;AAEA,MAAID,IAAJ,EAAU;AACN,UAAMP,OAAO,GAAG,MAAM,OAAQ,eAAcO,IAAK,KAA3B,CAAtB;AACA,UAAMJ,IAAI,GAAGf,MAAM,CAACY,OAAO,CAACS,OAAT,CAAnB;AACA,6BAAYN,IAAZ;AACH;;AACD,SAAO,EAAP;AACH,CATD;;AAWA,eAAeZ,YAAf","sourcesContent":["import React from 'react'\r\nimport matter from 'gray-matter'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport Layout from '../../components/Layout'\r\n\r\n\r\nfunction BlogTemplate(props) {\r\n\r\n    function reformatDate(fullDate) {\r\n        const date = new Date(fullDate)\r\n        return date.toDateString().slice(4);\r\n    }\r\n\r\n    // data from getInitialProps\r\n    const markdownBody = props.content\r\n    // const frontmatter = props.data\r\n    const { title, author, date } = props.data;\r\n\r\n    if (!title) { title = '' }\r\n    if (!author) { author = '' }\r\n    if (!date) { date = '' }\r\n\r\n    return (\r\n        <Layout siteTitle={props.siteTitle}>\r\n            <div className=\"container\">\r\n                <div className=\"block post\">\r\n                    <h1>{title}</h1>\r\n                    <h4>{author} | {reformatDate(date)}</h4>\r\n                    <div>\r\n                        <ReactMarkdown source={markdownBody} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nBlogTemplate.getInitialProps = async (ctx) => {\r\n    const { slug } = ctx.query\r\n\r\n    if (slug) {\r\n        const content = await import(`../../posts/${slug}.md`)\r\n        const data = matter(content.default);\r\n        return { ...data }\r\n    }\r\n    return {}\r\n}\r\n\r\nexport default BlogTemplate"]},"metadata":{},"sourceType":"module"}