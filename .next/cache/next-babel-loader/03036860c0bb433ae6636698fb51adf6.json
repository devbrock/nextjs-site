{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\brock\\\\Desktop\\\\nextjs-site\\\\pages\\\\posts\\\\[slug].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport matter from 'gray-matter';\nimport ReactMarkdown from 'react-markdown';\nimport Layout from '../../components/Layout';\nexport default function BlogTemplate(props) {\n  function reformatDate(fullDate) {\n    var date = new Date(fullDate);\n    return date.toDateString().slice(4);\n  } // data from getInitialProps\n\n\n  var title = props.title,\n      author = props.author,\n      date = props.date,\n      data = props.content.data;\n  return __jsx(Layout, {\n    siteTitle: props.siteTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"block post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, title), __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, author, \" | \", reformatDate(date)), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(ReactMarkdown, {\n    source: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })))));\n}\n\nBlogTemplate.getInitialProps = function _callee(ctx) {\n  var slug, content;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          slug = ctx.query.slug;\n          console.log({\n            slug: slug\n          });\n\n          if (!slug) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(import(\"../../posts/\".concat(slug, \".md\")));\n\n        case 5:\n          content = _context.sent;\n          console.log(content);\n          return _context.abrupt(\"return\", {\n            content: content\n          });\n\n        case 8:\n          return _context.abrupt(\"return\", {});\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/brock/Desktop/nextjs-site/pages/posts/[slug].js"],"names":["React","matter","ReactMarkdown","Layout","BlogTemplate","props","reformatDate","fullDate","date","Date","toDateString","slice","title","author","data","content","siteTitle","getInitialProps","ctx","slug","query","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAGA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAExC,WAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC5B,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,QAAT,CAAb;AACA,WAAOC,IAAI,CAACE,YAAL,GAAoBC,KAApB,CAA0B,CAA1B,CAAP;AACH,GALuC,CAOxC;;;AAPwC,MAQhCC,KARgC,GAQWP,KARX,CAQhCO,KARgC;AAAA,MAQzBC,MARyB,GAQWR,KARX,CAQzBQ,MARyB;AAAA,MAQjBL,IARiB,GAQWH,KARX,CAQjBG,IARiB;AAAA,MAQAM,IARA,GAQWT,KARX,CAQXU,OARW,CAQAD,IARA;AAUxC,SACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAET,KAAK,CAACW,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,MAAL,SAAgBP,YAAY,CAACE,IAAD,CAA5B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEM,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,CADJ,CADJ,CADJ;AAaH;;AAGDV,YAAY,CAACa,eAAb,GAA+B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAEdC,UAAAA,IAFc,GAGvBD,GAHuB,CAEvBE,KAFuB,CAEdD,IAFc;AAK3BE,UAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,YAAAA,IAAI,EAAJA;AAAF,WAAZ;;AAL2B,eAOvBA,IAPuB;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAQD,6BAAsBA,IAAtB,SARC;;AAAA;AAQjBJ,UAAAA,OARiB;AASvBM,UAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AATuB,2CAUhB;AAAEA,YAAAA,OAAO,EAAPA;AAAF,WAVgB;;AAAA;AAAA,2CAYpB,EAZoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B","sourcesContent":["import React from 'react'\r\nimport matter from 'gray-matter'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport Layout from '../../components/Layout'\r\n\r\n\r\nexport default function BlogTemplate(props) {\r\n\r\n    function reformatDate(fullDate) {\r\n        const date = new Date(fullDate)\r\n        return date.toDateString().slice(4);\r\n    }\r\n\r\n    // data from getInitialProps\r\n    const { title, author, date, content: { data } } = props\r\n\r\n    return (\r\n        <Layout siteTitle={props.siteTitle}>\r\n            <div className=\"container\">\r\n                <div className=\"block post\">\r\n                    <h1>{title}</h1>\r\n                    <h4>{author} | {reformatDate(date)}</h4>\r\n                    <div>\r\n                        <ReactMarkdown source={data} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nBlogTemplate.getInitialProps = async (ctx) => {\r\n    const {\r\n        query: { slug }\r\n    } = ctx\r\n\r\n    console.log({ slug })\r\n\r\n    if (slug) {\r\n        const content = await import(`../../posts/${slug}.md`)\r\n        console.log(content)\r\n        return { content }\r\n    }\r\n    return {}\r\n}"]},"metadata":{},"sourceType":"module"}