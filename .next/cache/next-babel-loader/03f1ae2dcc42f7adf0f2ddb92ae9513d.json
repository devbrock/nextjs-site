{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\brock\\\\Desktop\\\\nextjs-site\\\\pages\\\\posts\\\\[slug].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport matter from 'gray-matter';\nimport ReactMarkdown from 'react-markdown';\nimport Layout from '../../components/Layout';\n\nfunction BlogTemplate(props) {\n  function reformatDate(fullDate) {\n    var date = new Date(fullDate);\n    return date.toDateString().slice(4);\n  } // data from getInitialProps\n\n\n  var markdownBody = props.content;\n  var title = \"\";\n  var author = \"\";\n  var date = \"\"; // const frontmatter = props.data\n\n  if (props.data) {\n    // const { title, author, date } = props.data;\n    title = props.data.title;\n    author = props.data.author;\n    date = props.data.date;\n  }\n\n  return __jsx(Layout, {\n    siteTitle: props.siteTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"block post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, title), __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, author, \" | \", reformatDate(date)), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(ReactMarkdown, {\n    source: markdownBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })))));\n}\n\nBlogTemplate.getInitialProps = function _callee(ctx) {\n  var slug, content, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          slug = ctx.query.slug;\n\n          if (!slug) {\n            _context.next = 7;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(import(\"../../posts/\".concat(slug, \".md\")));\n\n        case 4:\n          content = _context.sent;\n          data = matter(content[\"default\"]);\n          return _context.abrupt(\"return\", _objectSpread({}, data));\n\n        case 7:\n          return _context.abrupt(\"return\", {});\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default BlogTemplate;","map":{"version":3,"sources":["C:/Users/brock/Desktop/nextjs-site/pages/posts/[slug].js"],"names":["React","matter","ReactMarkdown","Layout","BlogTemplate","props","reformatDate","fullDate","date","Date","toDateString","slice","markdownBody","content","title","author","data","siteTitle","getInitialProps","ctx","slug","query"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAEzB,WAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC5B,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,QAAT,CAAb;AACA,WAAOC,IAAI,CAACE,YAAL,GAAoBC,KAApB,CAA0B,CAA1B,CAAP;AACH,GALwB,CAOzB;;;AACA,MAAMC,YAAY,GAAGP,KAAK,CAACQ,OAA3B;AAEA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIP,IAAI,GAAG,EAAX,CAZyB,CAazB;;AAEA,MAAIH,KAAK,CAACW,IAAV,EAAgB;AACZ;AACAF,IAAAA,KAAK,GAAGT,KAAK,CAACW,IAAN,CAAWF,KAAnB;AACAC,IAAAA,MAAM,GAAGV,KAAK,CAACW,IAAN,CAAWD,MAApB;AACAP,IAAAA,IAAI,GAAGH,KAAK,CAACW,IAAN,CAAWR,IAAlB;AACH;;AAID,SACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEH,KAAK,CAACY,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,MAAL,SAAgBT,YAAY,CAACE,IAAD,CAA5B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEI,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHJ,CADJ,CADJ,CADJ;AAaH;;AAEDR,YAAY,CAACc,eAAb,GAA+B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,UAAAA,IADmB,GACVD,GAAG,CAACE,KADM,CACnBD,IADmB;;AAAA,eAGvBA,IAHuB;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAID,6BAAsBA,IAAtB,SAJC;;AAAA;AAIjBP,UAAAA,OAJiB;AAKjBG,UAAAA,IALiB,GAKVf,MAAM,CAACY,OAAO,WAAR,CALI;AAAA,6DAMXG,IANW;;AAAA;AAAA,2CAQpB,EARoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B;;AAWA,eAAeZ,YAAf","sourcesContent":["import React from 'react'\r\nimport matter from 'gray-matter'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport Layout from '../../components/Layout'\r\n\r\n\r\nfunction BlogTemplate(props) {\r\n\r\n    function reformatDate(fullDate) {\r\n        const date = new Date(fullDate)\r\n        return date.toDateString().slice(4);\r\n    }\r\n\r\n    // data from getInitialProps\r\n    const markdownBody = props.content\r\n\r\n    let title = \"\"\r\n    let author = \"\"\r\n    let date = \"\"\r\n    // const frontmatter = props.data\r\n\r\n    if (props.data) {\r\n        // const { title, author, date } = props.data;\r\n        title = props.data.title\r\n        author = props.data.author\r\n        date = props.data.date\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Layout siteTitle={props.siteTitle}>\r\n            <div className=\"container\">\r\n                <div className=\"block post\">\r\n                    <h1>{title}</h1>\r\n                    <h4>{author} | {reformatDate(date)}</h4>\r\n                    <div>\r\n                        <ReactMarkdown source={markdownBody} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nBlogTemplate.getInitialProps = async (ctx) => {\r\n    const { slug } = ctx.query\r\n\r\n    if (slug) {\r\n        const content = await import(`../../posts/${slug}.md`)\r\n        const data = matter(content.default);\r\n        return { ...data }\r\n    }\r\n    return {}\r\n}\r\n\r\nexport default BlogTemplate"]},"metadata":{},"sourceType":"module"}